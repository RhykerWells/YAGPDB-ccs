{{/*
		Made by ranger_4297 (765316548516380732)

	Trigger Type: `Regex`
	Trigger: `dossier|personnel`

	©️ RhykerWells 2020-Present
	GNU, GPLV3 License
	Repository: https://github.com/RhykerWells/YAGPDB-ccs/tree/iota-4
*/}}

{{$trigger := print `\A(?i)(?:\` .ServerPrefix `|<@!?` .BotUser.ID `>\*)(` .CCTrigger `)`}}
{{if not (reFind $trigger .Message.Content)}}
	{{return}}
{{end}}

{{$settings := (dbGet 0 "managementSettings").Value}}
{{$subfactionName := "veilrunners"}}

{{$members := getMembers}}
{{$membersInRoles := sdict $subfactionName cslice}}
{{range $roleName, $_ := $settings.Ranks}}
    {{$membersInRoles.Set $roleName cslice}}
{{end}}
{{range $members}}
    {{$member := .}}
    {{if in .Roles 1375381774204665917}}
        {{$currentUsers := $membersInRoles.Get $subfactionName}}
        {{$currentUsers = $currentUsers.Append .User.ID}}
        {{$membersInRoles.Set $subfactionName $currentUsers}}
    {{end}}
    {{range $roleName, $roleID := $settings.Ranks}}
        {{if in $member.Roles $roleID}}
            {{$currentUsers := $membersInRoles.Get $roleName}}
            {{$currentUsers = $currentUsers.Append $member.User.ID}}
            {{$membersInRoles.Set $roleName $currentUsers}}
        {{end}}
    {{end}}
{{end}}

{{$personnelEmbed := sdict "title" "Task Force Iota-4 | Personnel dossier" "color" 0x650678}}
{{if .CmdArgs}}
    {{$rank := index .CmdArgs 0 | lower}}
    {{$ranks := cslice}}
	{{range $settings.RankOrder}}
		{{$ranks = $ranks.Append (title .)}}
	{{end}}
    {{if not (inFold $ranks $rank)}}
        {{sendMessage nil (printf "Invalid rank given. Available ranks: `%s`" (joinStr "`, `" $ranks))}}
        {{return}}
    {{end}}
    {{$membersInRole := cslice}}
    {{range $membersInRoles.Get $rank}}
        {{$membersInRole = $membersInRole.Append (printf "<@%d>" .)}}
    {{end}}
    {{$personnelEmbed.Set "description" (printf "%s\n\nCount: %d" (joinStr "\n" $membersInRole) (len $membersInRole))}}
{{else}}
    {{$description := cslice}}
    {{$reversed := cslice}}
    {{range $i, $_ := (seq 0 (len $settings.RankOrder))}}
        {{$revIndex := sub (sub (len $settings.RankOrder) 1) $i}}
        {{$reversed = $reversed.Append (index $settings.RankOrder $revIndex)}}
    {{end}}
	{{range $reversed}}
        {{$description = $description.Append (printf "<@&%d>\n%d" ($settings.Ranks.Get .) (len ($membersInRoles.Get .)))}}
    {{end}}
    {{$description = $description.Append (printf "\nTotal number of %s (cached): %d\nTotal number of server members (cached): %d" (title $subfactionName) (len ($membersInRoles.Get $subfactionName)) (len $members))}}
    {{$personnelEmbed.Set "description" (joinStr "\n" $description)}}
{{end}}
{{sendMessage nil (cembed $personnelEmbed)}}